/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

/ {
    chosen { zmk,matrix_transform = &dual_2u_transform; };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        Divider: Divider {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS &kp MINUS>;
            label = "DIVIDER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB    &kp Q  &kp W         &kp E  &kp R      &kp T             &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LCTRL  &kp A  &kp S         &kp D  &kp F      &kp G             &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp APOSTROPHE
&kp LSHFT  &kp Z  &kp X         &kp C  &kp V      &kp B             &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT ENTER
                  &kp LEFT_ALT  &mo 1  &kp SPACE         &kp SPACE         &mo 2  &kp RCTRL
            >;
        };

        num_layer {
            bindings = <
&trans  &trans           &trans       &trans        &Divider              &trans                         &kp MINUS  &kp N7        &kp N8  &kp N9  &kp PLUS   &kp BACKSPACE
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR            &kp PERCENT                    &kp DOT    &kp N4        &kp N5  &kp N6  &kp EQUAL  &kp DEL
&trans  &kp CARET        &kp AMPS     &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS          &kp N0     &kp NUMBER_1  &kp N2  &kp N3  &trans     &trans
                         &trans       &trans        &trans                                       &trans             &trans        &trans
            >;
        };

        bt_layer {
            bindings = <
&trans  &trans  &trans    &kp UP    &trans     &trans          &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans    &trans    &kp F5     &trans          &trans        &trans        &trans        &trans        &trans        &trans
                &trans    &trans    &trans             &trans                &trans        &trans
            >;
        };
    };
};
